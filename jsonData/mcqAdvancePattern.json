{
	"data":[
		{
			"question":"Which keyword is used for accessing the features of a package?",
			"options" : ["package","import","extends","export"],
			"answer":"b Explanation: The import keyword is used to access the classes and interfaces of a particular package to the current file. In other words, it is used to import the user-defined and built-in classes and interfaces into the source file of java so that the current file can easily access the other packages by directly using its name"
		},
		{
			"question":"In java, jar stands for_____.",
			"options" : ["Java Archive Runner","Java Application Resource","Java Application Runner","None of the above"],
			"answer":"d Explanation: A Java ARchive (JAR) is a package file format used to combine all the metadata and resources into a single file. In other words, it is a file that contains several components, which make up a self-contained, executable, and deployable jar used to execute Java applications and deploy Java applets."
		},
		{
			"question":"Which of the following is false?",
			"options" : ["The rt.jar stands for the runtime jar","It is an optional jar file","It contains all the compiled class files","All the classes available in rt.jar is known to the JVM"],
			"answer":"b Explanation: The rt.jar stands for the runtime jar that comprises of all the compiled core class files for the Java Runtime Environment. It generally consists of classes like java.lang.String, java.lang.Object, java.io.Exception, etc., and all packages and classes available in the rt.jar are known to the JVM. The rt.jar is the mandatory jar file for every core java application as it contains all the core classes."
		},
		{
			"question":"What is the use of \\w in regex?",
			"options" : ["Used for a whitespace character","Used for a non-whitespace character","Used for a word character","Used for a non-word character"],
			"answer":"c Explanation: In java, the \"\\w\" regex is used to match with a word character consists of [a-zA-Z_0-9]."
		},
		{
			"question":"Which of the given methods are of Object class?",
			"options" : ["notify(), wait( long msecs ), and synchronized()","wait( long msecs ), interrupt(), and notifyAll()","notify(), notifyAll(), and wait()","sleep( long msecs ), wait(), and notify()"],
			"answer":"c Explanation: The notify(), notifyAll(), and wait() are the methods of the Object class. The notify() method is used to raise a single thread that is waiting on the object's monitor. The notifyAll() method is similar to the notify() method, except that it wakes up all the threads that are waiting on the object's monitor. The wait() method is used to make a thread to wait until another thread invokes the notify() or notifyAll() methods for an object."
		},
		{
			"question":"Which of the following is a valid syntax to synchronize the HashMap?",
			"options" : ["Map m = hashMap.synchronizeMap();","HashMap map =hashMap.synchronizeMap();","Map m1 = Collections.synchronizedMap(hashMap);","Map m2 = Collection.synchronizeMap(hashMap);"],
			"answer":"c Explanation: By default, the HashMap class is a non-synchronized collection class. The need for synchronization is to perform thread-safe operations on the class. To synchronize the HashMap class explicitly, we should use the Collections.synchronizedMap(hashMap) method that returns a thread-safe map object."
		},
		{
			"question":"Which of the following is a mutable class in java?",
			"options" : ["java.lang.String","java.lang.Byte","java.lang.Short","java.lang.StringBuilder"],
			"answer":"d Explanation: A mutable class is a class in which changes can be made after its creation. We can modify the internal state and fields of a mutable class. The StringBuilder class is a mutable class, as it can be altered after it is created."
		},
		{
			"question":"What is meant by the classes and objects that dependents on each other?",
			"options" : ["Tight Coupling","Cohesion","Loose Coupling","None of the above"],
			"answer":"a Explanation: In tight coupling, a group of classes and objects are highly dependent on each other. Tight coupling is also used in some cases, like when an object creates some other objects that are going to be used by them."
		},
		{
			"question":"How many threads can be executed at a time?",
			"options" : ["Only one thread","Multiple threads","Only main (main() method) thread","Two threads"],
			"answer":"b Explanation: In Java, multiple threads can be executed at the same time. A Java standalone application always starts with a single thread known as the main thread that is associated with the main() method."
		},
		{
			"question":"If three threads trying to share a single object at the same time, which condition will arise in this scenario?",
			"options" : ["Time-Lapse","Critical situation","Race condition","Recursion"],
			"answer":"c Explanation: If two or more threads are trying to access a common resource at the same time. This situation is known as race condition. It generally occurs during the execution of multi-threaded application. It also refers to a programming bug or issue that occurs when the thread scheduler swaps the threads at any time between the process."
		},
		{
			"question":"If a thread goes to sleep",
			"options" : ["It releases all the locks it has.","It does not release any locks.","It releases half of its locks.","It releases all of its lock except one."],
			"answer":"b Explanation: The sleep() method does not release any locks of an object for a specific time or until an interrupt occurs. It leads to the poor performance or deadlock of threads. Whereas, the wait() method does not release the locks of an object."
		},
		{
			"question":"Which of the following modifiers can be used for a variable so that it can be accessed by any thread or a part of a program?",
			"options" : ["global","transient","volatile","default"],
			"answer":"c Explanation: In Java, we can modify the values of a variable with the help of a reserved keyword known as volatile. It is a different way of making a class thread-safe. Thread-safe means that the methods and objects of a class are accessible by multiple threads at the same time."
		},
		{
			"question":"In character stream I/O, a single read/write operation performs _____.",
			"options" : ["Two bytes read/write at a time.","Eight bytes read/write at a time.","One byte read/write at a time.","Five bytes read/ write at a time."],
			"answer":"a Explanation: There are two types of I/O stream. One is a byte stream, and the other is the character stream. The Byte stream is used to perform input or output 8-bit (equals to 1 byte) Unicode bytes whereas, the Character stream is used to read or write a 16-bit (equals to 2 bytes) Unicode character."
		},
		{
			"question":"What is the default encoding for an OutputStreamWriter?",
			"options" : ["UTF-8","Default encoding of the host platform","UTF-12","None of the above"],
			"answer":"b Explanation: The OutputStreamWriter class translates Unicode character into bytes by using the character encoding. The character encoding can be either a default encoding dependent on the system or encoding that is explicitly defined. If no external encoding is specified, it will use the default encoding of the host platform."
		},
		{
			"question":"Which of the following is a reserved keyword in Java?",
			"options" : ["object","strictfp","main","system"],
			"answer":"b Explanation: In the above options, strictfp is the only reserved keyword of Java. The strictfp keyword is a modifier that restricts the floating-point calculations to assure portability and it was added in Java version 1.2. The objects are referring to those variables that are created using the new operator. In Java, main is the method that is the entry point of any program, and the System is a class."
		},
		{
			"question":"Which of the following is a marker interface?",
			"options" : ["Runnable interface","Remote interface","Readable interface","Result interface"],
			"answer":"b Explanation: A marker interface is an interface with no fields and methods. In other words, an empty interface (contains nothing) is known as the marker interface. Examples of marker interfaces are Cloneable, Serializable, ThreadSafe, and Remote interface."
		},
		{
			"question":"What is the use of the intern() method?",
			"options" : ["It returns the existing string from memory","It creates a new string in the database","It modifies the existing string in the database","None of the above"],
			"answer":"a Explanation: The intern() method is used to return the existing strings from the database. In other words, the intern() method returns a reference of the string. For example, if the string constant pool already has a string object with the same value, the intern() method will return a reference of the string from the pool."
		},
		{
			"question":"In which memory a String is stored, when we create a string using new operator?",
			"options" : ["Stack","String memory","Heap memory","Random storage space"],
			"answer":"c Explanation: When a String is created using a new operator, it always created in the heap memory. Whereas when we create a string using double quotes, it will check for the same value as of the string in the string constant pool. If it is found, returns a reference of it else create a new string in the string constant pool."
		},
		{
			"question":"Which of these classes are the direct subclasses of the Throwable class?",
			"options" : ["RuntimeException and Error class","Exception and VirtualMachineError class","Error and Exception class","IOException and VirtualMachineError class"],
			"answer":"c Explanation: According to the class hierarchy of Throwable class, the Error and Exception classes are the direct subclasses of the Throwable class"
		}
	]
}